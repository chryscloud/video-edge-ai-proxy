// Code generated by protoc-gen-go. DO NOT EDIT.
// source: video_streaming.proto

package chrys_cloud_videostreaming_v1beta1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AnnotateRequest struct {
	Confidence           float32  `protobuf:"fixed32,1,opt,name=confidence,proto3" json:"confidence,omitempty"`
	TrackId              int64    `protobuf:"varint,2,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	StartTimestamp       int64    `protobuf:"varint,3,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp         int64    `protobuf:"varint,4,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	DeviceName           string   `protobuf:"bytes,5,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Keyframe             int64    `protobuf:"varint,6,opt,name=keyframe,proto3" json:"keyframe,omitempty"`
	Packet               int64    `protobuf:"varint,7,opt,name=packet,proto3" json:"packet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnotateRequest) Reset()         { *m = AnnotateRequest{} }
func (m *AnnotateRequest) String() string { return proto.CompactTextString(m) }
func (*AnnotateRequest) ProtoMessage()    {}
func (*AnnotateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{0}
}

func (m *AnnotateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnotateRequest.Unmarshal(m, b)
}
func (m *AnnotateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnotateRequest.Marshal(b, m, deterministic)
}
func (m *AnnotateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnotateRequest.Merge(m, src)
}
func (m *AnnotateRequest) XXX_Size() int {
	return xxx_messageInfo_AnnotateRequest.Size(m)
}
func (m *AnnotateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnotateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnnotateRequest proto.InternalMessageInfo

func (m *AnnotateRequest) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *AnnotateRequest) GetTrackId() int64 {
	if m != nil {
		return m.TrackId
	}
	return 0
}

func (m *AnnotateRequest) GetStartTimestamp() int64 {
	if m != nil {
		return m.StartTimestamp
	}
	return 0
}

func (m *AnnotateRequest) GetEndTimestamp() int64 {
	if m != nil {
		return m.EndTimestamp
	}
	return 0
}

func (m *AnnotateRequest) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *AnnotateRequest) GetKeyframe() int64 {
	if m != nil {
		return m.Keyframe
	}
	return 0
}

func (m *AnnotateRequest) GetPacket() int64 {
	if m != nil {
		return m.Packet
	}
	return 0
}

type ShapeProto struct {
	Dim                  []*ShapeProto_Dim `protobuf:"bytes,2,rep,name=dim,proto3" json:"dim,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShapeProto) Reset()         { *m = ShapeProto{} }
func (m *ShapeProto) String() string { return proto.CompactTextString(m) }
func (*ShapeProto) ProtoMessage()    {}
func (*ShapeProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{1}
}

func (m *ShapeProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShapeProto.Unmarshal(m, b)
}
func (m *ShapeProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShapeProto.Marshal(b, m, deterministic)
}
func (m *ShapeProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShapeProto.Merge(m, src)
}
func (m *ShapeProto) XXX_Size() int {
	return xxx_messageInfo_ShapeProto.Size(m)
}
func (m *ShapeProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ShapeProto.DiscardUnknown(m)
}

var xxx_messageInfo_ShapeProto proto.InternalMessageInfo

func (m *ShapeProto) GetDim() []*ShapeProto_Dim {
	if m != nil {
		return m.Dim
	}
	return nil
}

type ShapeProto_Dim struct {
	// Size of image in that dimension (-1 means unknown dimension)
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// optional name of image dimension
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShapeProto_Dim) Reset()         { *m = ShapeProto_Dim{} }
func (m *ShapeProto_Dim) String() string { return proto.CompactTextString(m) }
func (*ShapeProto_Dim) ProtoMessage()    {}
func (*ShapeProto_Dim) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{1, 0}
}

func (m *ShapeProto_Dim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShapeProto_Dim.Unmarshal(m, b)
}
func (m *ShapeProto_Dim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShapeProto_Dim.Marshal(b, m, deterministic)
}
func (m *ShapeProto_Dim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShapeProto_Dim.Merge(m, src)
}
func (m *ShapeProto_Dim) XXX_Size() int {
	return xxx_messageInfo_ShapeProto_Dim.Size(m)
}
func (m *ShapeProto_Dim) XXX_DiscardUnknown() {
	xxx_messageInfo_ShapeProto_Dim.DiscardUnknown(m)
}

var xxx_messageInfo_ShapeProto_Dim proto.InternalMessageInfo

func (m *ShapeProto_Dim) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ShapeProto_Dim) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type VideoFrame struct {
	Width                int64       `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               int64       `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Data                 []byte      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp            int64       `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsKeyframe           bool        `protobuf:"varint,5,opt,name=is_keyframe,json=isKeyframe,proto3" json:"is_keyframe,omitempty"`
	Pts                  int64       `protobuf:"varint,6,opt,name=pts,proto3" json:"pts,omitempty"`
	Dts                  int64       `protobuf:"varint,7,opt,name=dts,proto3" json:"dts,omitempty"`
	FrameType            string      `protobuf:"bytes,8,opt,name=frame_type,json=frameType,proto3" json:"frame_type,omitempty"`
	IsCorrupt            bool        `protobuf:"varint,9,opt,name=is_corrupt,json=isCorrupt,proto3" json:"is_corrupt,omitempty"`
	TimeBase             float64     `protobuf:"fixed64,10,opt,name=time_base,json=timeBase,proto3" json:"time_base,omitempty"`
	Shape                *ShapeProto `protobuf:"bytes,11,opt,name=shape,proto3" json:"shape,omitempty"`
	DeviceId             string      `protobuf:"bytes,12,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Packet               int64       `protobuf:"varint,13,opt,name=packet,proto3" json:"packet,omitempty"`
	Keyframe             int64       `protobuf:"varint,14,opt,name=keyframe,proto3" json:"keyframe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VideoFrame) Reset()         { *m = VideoFrame{} }
func (m *VideoFrame) String() string { return proto.CompactTextString(m) }
func (*VideoFrame) ProtoMessage()    {}
func (*VideoFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{2}
}

func (m *VideoFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoFrame.Unmarshal(m, b)
}
func (m *VideoFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoFrame.Marshal(b, m, deterministic)
}
func (m *VideoFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoFrame.Merge(m, src)
}
func (m *VideoFrame) XXX_Size() int {
	return xxx_messageInfo_VideoFrame.Size(m)
}
func (m *VideoFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoFrame.DiscardUnknown(m)
}

var xxx_messageInfo_VideoFrame proto.InternalMessageInfo

func (m *VideoFrame) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *VideoFrame) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VideoFrame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *VideoFrame) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VideoFrame) GetIsKeyframe() bool {
	if m != nil {
		return m.IsKeyframe
	}
	return false
}

func (m *VideoFrame) GetPts() int64 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *VideoFrame) GetDts() int64 {
	if m != nil {
		return m.Dts
	}
	return 0
}

func (m *VideoFrame) GetFrameType() string {
	if m != nil {
		return m.FrameType
	}
	return ""
}

func (m *VideoFrame) GetIsCorrupt() bool {
	if m != nil {
		return m.IsCorrupt
	}
	return false
}

func (m *VideoFrame) GetTimeBase() float64 {
	if m != nil {
		return m.TimeBase
	}
	return 0
}

func (m *VideoFrame) GetShape() *ShapeProto {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *VideoFrame) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *VideoFrame) GetPacket() int64 {
	if m != nil {
		return m.Packet
	}
	return 0
}

func (m *VideoFrame) GetKeyframe() int64 {
	if m != nil {
		return m.Keyframe
	}
	return 0
}

type VideoFrameRequest struct {
	KeyFrameOnly         bool     `protobuf:"varint,1,opt,name=key_frame_only,json=keyFrameOnly,proto3" json:"key_frame_only,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoFrameRequest) Reset()         { *m = VideoFrameRequest{} }
func (m *VideoFrameRequest) String() string { return proto.CompactTextString(m) }
func (*VideoFrameRequest) ProtoMessage()    {}
func (*VideoFrameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{3}
}

func (m *VideoFrameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoFrameRequest.Unmarshal(m, b)
}
func (m *VideoFrameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoFrameRequest.Marshal(b, m, deterministic)
}
func (m *VideoFrameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoFrameRequest.Merge(m, src)
}
func (m *VideoFrameRequest) XXX_Size() int {
	return xxx_messageInfo_VideoFrameRequest.Size(m)
}
func (m *VideoFrameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoFrameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VideoFrameRequest proto.InternalMessageInfo

func (m *VideoFrameRequest) GetKeyFrameOnly() bool {
	if m != nil {
		return m.KeyFrameOnly
	}
	return false
}

func (m *VideoFrameRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type ListStream struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	FailingStreak        int64    `protobuf:"varint,3,opt,name=failing_streak,json=failingStreak,proto3" json:"failing_streak,omitempty"`
	HealthStatus         string   `protobuf:"bytes,4,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	Dead                 bool     `protobuf:"varint,5,opt,name=dead,proto3" json:"dead,omitempty"`
	ExitCode             int64    `protobuf:"varint,6,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Pid                  int32    `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`
	Running              bool     `protobuf:"varint,8,opt,name=running,proto3" json:"running,omitempty"`
	Paused               bool     `protobuf:"varint,9,opt,name=paused,proto3" json:"paused,omitempty"`
	Restarting           bool     `protobuf:"varint,10,opt,name=restarting,proto3" json:"restarting,omitempty"`
	Oomkilled            bool     `protobuf:"varint,11,opt,name=oomkilled,proto3" json:"oomkilled,omitempty"`
	Error                string   `protobuf:"bytes,12,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStream) Reset()         { *m = ListStream{} }
func (m *ListStream) String() string { return proto.CompactTextString(m) }
func (*ListStream) ProtoMessage()    {}
func (*ListStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{4}
}

func (m *ListStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStream.Unmarshal(m, b)
}
func (m *ListStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStream.Marshal(b, m, deterministic)
}
func (m *ListStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStream.Merge(m, src)
}
func (m *ListStream) XXX_Size() int {
	return xxx_messageInfo_ListStream.Size(m)
}
func (m *ListStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStream.DiscardUnknown(m)
}

var xxx_messageInfo_ListStream proto.InternalMessageInfo

func (m *ListStream) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListStream) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListStream) GetFailingStreak() int64 {
	if m != nil {
		return m.FailingStreak
	}
	return 0
}

func (m *ListStream) GetHealthStatus() string {
	if m != nil {
		return m.HealthStatus
	}
	return ""
}

func (m *ListStream) GetDead() bool {
	if m != nil {
		return m.Dead
	}
	return false
}

func (m *ListStream) GetExitCode() int64 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *ListStream) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ListStream) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *ListStream) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

func (m *ListStream) GetRestarting() bool {
	if m != nil {
		return m.Restarting
	}
	return false
}

func (m *ListStream) GetOomkilled() bool {
	if m != nil {
		return m.Oomkilled
	}
	return false
}

func (m *ListStream) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ListStreamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStreamRequest) Reset()         { *m = ListStreamRequest{} }
func (m *ListStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ListStreamRequest) ProtoMessage()    {}
func (*ListStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{5}
}

func (m *ListStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStreamRequest.Unmarshal(m, b)
}
func (m *ListStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStreamRequest.Marshal(b, m, deterministic)
}
func (m *ListStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStreamRequest.Merge(m, src)
}
func (m *ListStreamRequest) XXX_Size() int {
	return xxx_messageInfo_ListStreamRequest.Size(m)
}
func (m *ListStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListStreamRequest proto.InternalMessageInfo

type StartProxyRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	StoreVideo           bool     `protobuf:"varint,2,opt,name=store_video,json=storeVideo,proto3" json:"store_video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartProxyRequest) Reset()         { *m = StartProxyRequest{} }
func (m *StartProxyRequest) String() string { return proto.CompactTextString(m) }
func (*StartProxyRequest) ProtoMessage()    {}
func (*StartProxyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{6}
}

func (m *StartProxyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartProxyRequest.Unmarshal(m, b)
}
func (m *StartProxyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartProxyRequest.Marshal(b, m, deterministic)
}
func (m *StartProxyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartProxyRequest.Merge(m, src)
}
func (m *StartProxyRequest) XXX_Size() int {
	return xxx_messageInfo_StartProxyRequest.Size(m)
}
func (m *StartProxyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartProxyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartProxyRequest proto.InternalMessageInfo

func (m *StartProxyRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *StartProxyRequest) GetStoreVideo() bool {
	if m != nil {
		return m.StoreVideo
	}
	return false
}

type StopProxyRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopProxyRequest) Reset()         { *m = StopProxyRequest{} }
func (m *StopProxyRequest) String() string { return proto.CompactTextString(m) }
func (*StopProxyRequest) ProtoMessage()    {}
func (*StopProxyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{7}
}

func (m *StopProxyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopProxyRequest.Unmarshal(m, b)
}
func (m *StopProxyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopProxyRequest.Marshal(b, m, deterministic)
}
func (m *StopProxyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopProxyRequest.Merge(m, src)
}
func (m *StopProxyRequest) XXX_Size() int {
	return xxx_messageInfo_StopProxyRequest.Size(m)
}
func (m *StopProxyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopProxyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopProxyRequest proto.InternalMessageInfo

func (m *StopProxyRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type ProxyResponse struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ProxyStream          bool     `protobuf:"varint,2,opt,name=proxy_stream,json=proxyStream,proto3" json:"proxy_stream,omitempty"`
	StoreVideo           bool     `protobuf:"varint,3,opt,name=store_video,json=storeVideo,proto3" json:"store_video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyResponse) Reset()         { *m = ProxyResponse{} }
func (m *ProxyResponse) String() string { return proto.CompactTextString(m) }
func (*ProxyResponse) ProtoMessage()    {}
func (*ProxyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d12c9ba8c5e732, []int{8}
}

func (m *ProxyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyResponse.Unmarshal(m, b)
}
func (m *ProxyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyResponse.Marshal(b, m, deterministic)
}
func (m *ProxyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyResponse.Merge(m, src)
}
func (m *ProxyResponse) XXX_Size() int {
	return xxx_messageInfo_ProxyResponse.Size(m)
}
func (m *ProxyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyResponse proto.InternalMessageInfo

func (m *ProxyResponse) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *ProxyResponse) GetProxyStream() bool {
	if m != nil {
		return m.ProxyStream
	}
	return false
}

func (m *ProxyResponse) GetStoreVideo() bool {
	if m != nil {
		return m.StoreVideo
	}
	return false
}

func init() {
	proto.RegisterType((*AnnotateRequest)(nil), "chrys.cloud.videostreaming.v1beta1.AnnotateRequest")
	proto.RegisterType((*ShapeProto)(nil), "chrys.cloud.videostreaming.v1beta1.ShapeProto")
	proto.RegisterType((*ShapeProto_Dim)(nil), "chrys.cloud.videostreaming.v1beta1.ShapeProto.Dim")
	proto.RegisterType((*VideoFrame)(nil), "chrys.cloud.videostreaming.v1beta1.VideoFrame")
	proto.RegisterType((*VideoFrameRequest)(nil), "chrys.cloud.videostreaming.v1beta1.VideoFrameRequest")
	proto.RegisterType((*ListStream)(nil), "chrys.cloud.videostreaming.v1beta1.ListStream")
	proto.RegisterType((*ListStreamRequest)(nil), "chrys.cloud.videostreaming.v1beta1.ListStreamRequest")
	proto.RegisterType((*StartProxyRequest)(nil), "chrys.cloud.videostreaming.v1beta1.StartProxyRequest")
	proto.RegisterType((*StopProxyRequest)(nil), "chrys.cloud.videostreaming.v1beta1.StopProxyRequest")
	proto.RegisterType((*ProxyResponse)(nil), "chrys.cloud.videostreaming.v1beta1.ProxyResponse")
}

func init() {
	proto.RegisterFile("video_streaming.proto", fileDescriptor_f3d12c9ba8c5e732)
}

var fileDescriptor_f3d12c9ba8c5e732 = []byte{
	// 824 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x35, 0x45, 0xcb, 0xa6, 0x46, 0x17, 0xdb, 0xdb, 0x0b, 0x58, 0xf5, 0xce, 0xb6, 0xa8, 0x5f,
	0xca, 0xd6, 0x6a, 0xfb, 0x01, 0xad, 0x8d, 0x02, 0x46, 0x8d, 0x5e, 0x28, 0xc3, 0xaf, 0x04, 0x2d,
	0xae, 0xad, 0x85, 0xc4, 0x4b, 0xb8, 0x2b, 0xc5, 0xca, 0x4b, 0x90, 0x6f, 0xc9, 0xf7, 0xe4, 0x5b,
	0xf2, 0x92, 0x0f, 0xc8, 0xec, 0xec, 0x4a, 0xb4, 0x64, 0x20, 0x91, 0xf3, 0xb6, 0x73, 0x76, 0x6e,
	0x7b, 0xe6, 0x0c, 0x09, 0x9f, 0xcc, 0x45, 0xca, 0x8b, 0x58, 0xaa, 0x8a, 0x27, 0x99, 0xc8, 0x6f,
	0xc3, 0xb2, 0x2a, 0x54, 0xc1, 0x82, 0xd1, 0xb8, 0x5a, 0xc8, 0x70, 0x34, 0x2d, 0x66, 0x69, 0x48,
	0x2e, 0xb5, 0xc7, 0xfc, 0xe4, 0x9a, 0xab, 0xe4, 0x24, 0x78, 0xed, 0xc0, 0xc1, 0x1f, 0x79, 0x5e,
	0xa8, 0x44, 0xf1, 0x88, 0x3f, 0x99, 0x71, 0xa9, 0xd8, 0x57, 0x00, 0xa3, 0x22, 0xbf, 0xc1, 0x80,
	0x7c, 0xc4, 0x7d, 0xe7, 0x1b, 0xe7, 0xb8, 0x11, 0xdd, 0x43, 0xd8, 0x67, 0xe0, 0xa9, 0x2a, 0x19,
	0x4d, 0x62, 0x91, 0xfa, 0x0d, 0xbc, 0x75, 0xa3, 0x7d, 0xb2, 0xcf, 0x53, 0xf6, 0x23, 0x1c, 0x48,
	0x95, 0x54, 0x2a, 0x56, 0x22, 0xc3, 0x54, 0x49, 0x56, 0xfa, 0x2e, 0x79, 0xf4, 0x08, 0xbe, 0x5c,
	0xa2, 0xec, 0x3b, 0xe8, 0xf2, 0x3c, 0xbd, 0xe7, 0xb6, 0x4b, 0x6e, 0x1d, 0x04, 0x6b, 0xa7, 0xaf,
	0xa1, 0x9d, 0xf2, 0xb9, 0x18, 0xf1, 0x38, 0x4f, 0x32, 0xee, 0x37, 0xd1, 0xa5, 0x15, 0x81, 0x81,
	0xfe, 0x41, 0x84, 0xf5, 0xc1, 0x9b, 0xf0, 0xc5, 0x4d, 0xa5, 0x6f, 0xf7, 0x28, 0xc1, 0xca, 0x66,
	0x9f, 0xc2, 0x5e, 0x89, 0x4d, 0x71, 0xe5, 0xef, 0xd3, 0x8d, 0xb5, 0x82, 0x17, 0x0e, 0xc0, 0x70,
	0x9c, 0x94, 0xfc, 0x3f, 0x22, 0xe9, 0x0c, 0xdc, 0x54, 0x64, 0xf8, 0x0e, 0xf7, 0xb8, 0x3d, 0x18,
	0x84, 0xef, 0xa7, 0x2c, 0xac, 0x83, 0xc3, 0x33, 0x91, 0x45, 0x3a, 0xbc, 0xff, 0x13, 0xb8, 0x78,
	0x66, 0x0c, 0x76, 0xa5, 0x78, 0x66, 0x38, 0x73, 0x23, 0x3a, 0x6b, 0x8c, 0xba, 0x6f, 0x50, 0xf7,
	0x74, 0x0e, 0x5e, 0xba, 0x00, 0x57, 0x3a, 0xfb, 0x5f, 0xd4, 0xea, 0xc7, 0xd0, 0x7c, 0x2a, 0x52,
	0x35, 0xb6, 0x71, 0xc6, 0xd0, 0x0f, 0x18, 0x73, 0x71, 0x3b, 0x56, 0x96, 0x64, 0x6b, 0xe9, 0x84,
	0x69, 0xa2, 0x12, 0x22, 0xb6, 0x13, 0xd1, 0x99, 0x7d, 0x01, 0xad, 0x4d, 0x2a, 0x6b, 0x40, 0xf3,
	0x28, 0x64, 0xbc, 0x62, 0x4a, 0xf3, 0xe8, 0x45, 0x20, 0xe4, 0xdf, 0x4b, 0xae, 0x0e, 0xc1, 0x2d,
	0x95, 0xb4, 0x14, 0xea, 0xa3, 0x46, 0x52, 0x44, 0x0c, 0x75, 0xfa, 0xc8, 0xbe, 0x04, 0x20, 0xe7,
	0x58, 0x2d, 0x4a, 0xee, 0x7b, 0xf4, 0x9a, 0x16, 0x21, 0x97, 0x08, 0xe8, 0x6b, 0xac, 0x31, 0x2a,
	0xaa, 0x6a, 0x56, 0x2a, 0xbf, 0x45, 0x25, 0x5a, 0x42, 0x9e, 0x1a, 0x80, 0x7d, 0x6e, 0x1a, 0x8c,
	0xaf, 0x13, 0xc9, 0x7d, 0xc0, 0x5b, 0x27, 0xf2, 0x34, 0xf0, 0x27, 0xda, 0x38, 0x83, 0xa6, 0xd4,
	0xa4, 0xfa, 0x6d, 0xbc, 0x68, 0x0f, 0xc2, 0xc7, 0x4d, 0x21, 0x32, 0xc1, 0xba, 0x84, 0x55, 0x0b,
	0xea, 0xb2, 0x43, 0xfd, 0x79, 0x06, 0x40, 0x61, 0xd6, 0x6a, 0xe8, 0xde, 0x57, 0xc3, 0x9a, 0x82,
	0x7a, 0xeb, 0x0a, 0x0a, 0xae, 0xe0, 0xa8, 0x1e, 0xd2, 0x72, 0x39, 0xbe, 0x87, 0x1e, 0x3a, 0xc4,
	0x86, 0x8a, 0x22, 0x9f, 0x2e, 0x68, 0x68, 0x5e, 0xd4, 0x41, 0x94, 0x1c, 0xff, 0x45, 0x6c, 0xbd,
	0x97, 0xc6, 0x7a, 0x2f, 0xc1, 0xab, 0x06, 0xc0, 0x85, 0x90, 0x6a, 0x48, 0x8f, 0x5a, 0x09, 0xc4,
	0xa9, 0x05, 0xa2, 0xdb, 0xc5, 0xd1, 0xa9, 0x99, 0xb4, 0xc1, 0xd6, 0x62, 0x3f, 0x40, 0xef, 0x26,
	0x11, 0x53, 0x24, 0xc2, 0x6c, 0xfb, 0xc4, 0xae, 0x57, 0xd7, 0xa2, 0x94, 0x72, 0xa2, 0xb7, 0x6b,
	0xcc, 0x93, 0xa9, 0x1a, 0xc7, 0x36, 0xcb, 0x2e, 0x65, 0xe9, 0x18, 0x70, 0x68, 0x72, 0x69, 0x1d,
	0xf1, 0x24, 0xb5, 0x72, 0xa0, 0xb3, 0xee, 0x9b, 0xdf, 0x09, 0x85, 0x73, 0x4c, 0x57, 0x1b, 0xa5,
	0x81, 0x53, 0xb4, 0x49, 0x25, 0xf8, 0x1c, 0xad, 0x89, 0x66, 0xa4, 0x8f, 0xcc, 0x87, 0xfd, 0x6a,
	0x96, 0xe7, 0x58, 0x98, 0x04, 0xe1, 0x45, 0x4b, 0xd3, 0xf0, 0x3d, 0x93, 0x3c, 0xb5, 0x52, 0xb0,
	0x96, 0xfe, 0xb6, 0x54, 0x9c, 0xbe, 0x05, 0x3a, 0x08, 0x8c, 0x12, 0x6b, 0x44, 0x0b, 0xb9, 0x28,
	0xb2, 0x89, 0x98, 0x4e, 0x31, 0xb4, 0x6d, 0x54, 0xb4, 0x02, 0xf4, 0xa2, 0xf0, 0xaa, 0x2a, 0x2a,
	0x3b, 0x5e, 0x63, 0x04, 0x1f, 0xc1, 0x51, 0x4d, 0xa7, 0x9d, 0x53, 0xf0, 0x3f, 0x1c, 0x0d, 0x75,
	0x52, 0x94, 0xc8, 0xdd, 0x62, 0x39, 0xbc, 0xb5, 0xb1, 0x38, 0x1b, 0x12, 0xc1, 0x2d, 0x91, 0xaa,
	0xa8, 0x78, 0x4c, 0x8a, 0x23, 0xe2, 0xb1, 0x37, 0x82, 0x48, 0x06, 0xc1, 0xcf, 0x70, 0x38, 0x54,
	0x45, 0xb9, 0x75, 0xc6, 0xa0, 0x84, 0xae, 0x75, 0x96, 0x65, 0x91, 0x4b, 0xfe, 0xee, 0xfa, 0xdf,
	0x42, 0xa7, 0xd4, 0xde, 0xf6, 0x3b, 0x6e, 0x1b, 0x68, 0x13, 0x66, 0xa5, 0xb2, 0xd1, 0xa2, 0xbb,
	0xd9, 0xe2, 0xe0, 0x8d, 0x0b, 0xcd, 0xf3, 0x2c, 0xb9, 0xe5, 0xec, 0x39, 0x1c, 0x12, 0x74, 0x81,
	0x1f, 0x76, 0xa9, 0x0c, 0xf6, 0xfb, 0x36, 0x8b, 0xf5, 0x40, 0xf2, 0xfd, 0xf0, 0x71, 0x61, 0xc1,
	0xce, 0xb1, 0xf3, 0x8b, 0xc3, 0xee, 0xa0, 0x5d, 0x4f, 0x45, 0x6e, 0x57, 0xfb, 0xc1, 0x18, 0xb7,
	0xab, 0x5d, 0x87, 0x05, 0x3b, 0x54, 0x19, 0xea, 0xd1, 0x6f, 0x57, 0xf8, 0x81, 0x54, 0xfa, 0x27,
	0xdb, 0x84, 0xad, 0x4d, 0x37, 0xd8, 0x61, 0x73, 0x68, 0xad, 0x14, 0xc2, 0x7e, 0xdb, 0xae, 0xf0,
	0xba, 0xa0, 0x3e, 0xa8, 0xee, 0xf5, 0x1e, 0xfd, 0xf0, 0x7f, 0x7d, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0x7b, 0x91, 0x1a, 0xf9, 0x09, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImageClient is the client API for Image service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageClient interface {
	VideoLatestImage(ctx context.Context, opts ...grpc.CallOption) (Image_VideoLatestImageClient, error)
	ListStreams(ctx context.Context, in *ListStreamRequest, opts ...grpc.CallOption) (Image_ListStreamsClient, error)
	StartProxy(ctx context.Context, in *StartProxyRequest, opts ...grpc.CallOption) (*ProxyResponse, error)
	StopProxy(ctx context.Context, in *StopProxyRequest, opts ...grpc.CallOption) (*ProxyResponse, error)
}

type imageClient struct {
	cc grpc.ClientConnInterface
}

func NewImageClient(cc grpc.ClientConnInterface) ImageClient {
	return &imageClient{cc}
}

func (c *imageClient) VideoLatestImage(ctx context.Context, opts ...grpc.CallOption) (Image_VideoLatestImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Image_serviceDesc.Streams[0], "/chrys.cloud.videostreaming.v1beta1.Image/VideoLatestImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &imageVideoLatestImageClient{stream}
	return x, nil
}

type Image_VideoLatestImageClient interface {
	Send(*VideoFrameRequest) error
	Recv() (*VideoFrame, error)
	grpc.ClientStream
}

type imageVideoLatestImageClient struct {
	grpc.ClientStream
}

func (x *imageVideoLatestImageClient) Send(m *VideoFrameRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *imageVideoLatestImageClient) Recv() (*VideoFrame, error) {
	m := new(VideoFrame)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *imageClient) ListStreams(ctx context.Context, in *ListStreamRequest, opts ...grpc.CallOption) (Image_ListStreamsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Image_serviceDesc.Streams[1], "/chrys.cloud.videostreaming.v1beta1.Image/ListStreams", opts...)
	if err != nil {
		return nil, err
	}
	x := &imageListStreamsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Image_ListStreamsClient interface {
	Recv() (*ListStream, error)
	grpc.ClientStream
}

type imageListStreamsClient struct {
	grpc.ClientStream
}

func (x *imageListStreamsClient) Recv() (*ListStream, error) {
	m := new(ListStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *imageClient) StartProxy(ctx context.Context, in *StartProxyRequest, opts ...grpc.CallOption) (*ProxyResponse, error) {
	out := new(ProxyResponse)
	err := c.cc.Invoke(ctx, "/chrys.cloud.videostreaming.v1beta1.Image/StartProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClient) StopProxy(ctx context.Context, in *StopProxyRequest, opts ...grpc.CallOption) (*ProxyResponse, error) {
	out := new(ProxyResponse)
	err := c.cc.Invoke(ctx, "/chrys.cloud.videostreaming.v1beta1.Image/StopProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageServer is the server API for Image service.
type ImageServer interface {
	VideoLatestImage(Image_VideoLatestImageServer) error
	ListStreams(*ListStreamRequest, Image_ListStreamsServer) error
	StartProxy(context.Context, *StartProxyRequest) (*ProxyResponse, error)
	StopProxy(context.Context, *StopProxyRequest) (*ProxyResponse, error)
}

// UnimplementedImageServer can be embedded to have forward compatible implementations.
type UnimplementedImageServer struct {
}

func (*UnimplementedImageServer) VideoLatestImage(srv Image_VideoLatestImageServer) error {
	return status.Errorf(codes.Unimplemented, "method VideoLatestImage not implemented")
}
func (*UnimplementedImageServer) ListStreams(req *ListStreamRequest, srv Image_ListStreamsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListStreams not implemented")
}
func (*UnimplementedImageServer) StartProxy(ctx context.Context, req *StartProxyRequest) (*ProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartProxy not implemented")
}
func (*UnimplementedImageServer) StopProxy(ctx context.Context, req *StopProxyRequest) (*ProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopProxy not implemented")
}

func RegisterImageServer(s *grpc.Server, srv ImageServer) {
	s.RegisterService(&_Image_serviceDesc, srv)
}

func _Image_VideoLatestImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ImageServer).VideoLatestImage(&imageVideoLatestImageServer{stream})
}

type Image_VideoLatestImageServer interface {
	Send(*VideoFrame) error
	Recv() (*VideoFrameRequest, error)
	grpc.ServerStream
}

type imageVideoLatestImageServer struct {
	grpc.ServerStream
}

func (x *imageVideoLatestImageServer) Send(m *VideoFrame) error {
	return x.ServerStream.SendMsg(m)
}

func (x *imageVideoLatestImageServer) Recv() (*VideoFrameRequest, error) {
	m := new(VideoFrameRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Image_ListStreams_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ImageServer).ListStreams(m, &imageListStreamsServer{stream})
}

type Image_ListStreamsServer interface {
	Send(*ListStream) error
	grpc.ServerStream
}

type imageListStreamsServer struct {
	grpc.ServerStream
}

func (x *imageListStreamsServer) Send(m *ListStream) error {
	return x.ServerStream.SendMsg(m)
}

func _Image_StartProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServer).StartProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chrys.cloud.videostreaming.v1beta1.Image/StartProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServer).StartProxy(ctx, req.(*StartProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Image_StopProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServer).StopProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chrys.cloud.videostreaming.v1beta1.Image/StopProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServer).StopProxy(ctx, req.(*StopProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Image_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chrys.cloud.videostreaming.v1beta1.Image",
	HandlerType: (*ImageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartProxy",
			Handler:    _Image_StartProxy_Handler,
		},
		{
			MethodName: "StopProxy",
			Handler:    _Image_StopProxy_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "VideoLatestImage",
			Handler:       _Image_VideoLatestImage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ListStreams",
			Handler:       _Image_ListStreams_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "video_streaming.proto",
}
